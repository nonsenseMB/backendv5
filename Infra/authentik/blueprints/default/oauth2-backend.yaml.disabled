version: 1
metadata:
  name: nAI Backend OAuth2 Application
  labels:
    blueprints.goauthentik.io/description: OAuth2 Provider and Application for nAI Backend
entries:
  # OAuth2 Provider for Backend
  - model: authentik_providers_oauth2.oauth2provider
    state: present
    id: provider-nai-backend
    identifiers:
      name: nAI Backend Provider
    attrs:
      name: nAI Backend Provider
      authorization_flow: !Find [authentik_flows.flow, [slug, default-provider-authorization-implicit-consent]]
      invalidation_flow: !Find [authentik_flows.flow, [slug, default-invalidation-flow]]
      client_type: confidential
      client_id: nai-backend
      client_secret: xleevs5MvZA9MDQqUv5V3qO52p4PNWXeTg1xWGj4g5BgeIESdvX551ZqOpCmNR
      redirect_uris: |
        http://localhost:8000/api/v1/auth/oauth2/callback
        http://localhost:8000/api/v1/auth/callback
        http://localhost:8000/docs/oauth2-redirect
        https://app.nai.local/auth/callback
      sub_mode: hashed_user_id
      include_claims_in_id_token: true
      issuer_mode: per_provider
      access_code_validity: minutes=10
      access_token_validity: hours=1
      refresh_token_validity: days=30
      signing_key: !Find [authentik_crypto.certificatekeypair, [name, authentik Self-signed Certificate]]
      property_mappings:
        - !Find [authentik_providers_oauth2.scopemapping, [scope_name, openid]]
        - !Find [authentik_providers_oauth2.scopemapping, [scope_name, email]]
        - !Find [authentik_providers_oauth2.scopemapping, [scope_name, profile]]

  # Application for Backend
  - model: authentik_core.application
    state: present
    id: app-nai-backend
    identifiers:
      slug: nai-backend
    attrs:
      name: nAI Backend
      slug: nai-backend
      provider: !KeyOf provider-nai-backend
      policy_engine_mode: any
      meta_launch_url: http://localhost:8000
      meta_description: nAI Backend Application

  # Default Tenant Blueprint
  - model: authentik_core.group
    state: present
    id: group-default-tenant
    identifiers:
      name: Default Tenant Users
    attrs:
      name: Default Tenant Users
      attributes:
        tenant: default
        tenant_name: Default Organization

  # Default Admin User
  - model: authentik_core.user
    state: present
    id: default-admin
    identifiers:
      username: !Env DEFAULT_ADMIN_USERNAME
    attrs:
      username: !Env DEFAULT_ADMIN_USERNAME
      name: Default Admin
      email: !Env DEFAULT_ADMIN_EMAIL
      is_active: true
      groups:
        - !Find [authentik_core.group, [name, authentik Admins]]
        - !KeyOf group-default-tenant
      attributes:
        tenant: default
        role: admin
