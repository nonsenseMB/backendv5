"""Add Document System, Knowledge Graph, and Tool System models

Revision ID: 4f9ecd6a89db
Revises: f51e3c6afc63
Create Date: 2025-06-23 17:35:38.996977

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4f9ecd6a89db'
down_revision: Union[str, None] = 'f51e3c6afc63'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mcp_servers',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('display_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('server_type', sa.String(length=50), nullable=False),
    sa.Column('connection_config', sa.JSON(), nullable=False),
    sa.Column('base_url', sa.Text(), nullable=True),
    sa.Column('auth_type', sa.String(length=50), nullable=True),
    sa.Column('auth_config', sa.JSON(), nullable=True),
    sa.Column('available_tools', sa.JSON(), nullable=True),
    sa.Column('tool_schemas', sa.JSON(), nullable=True),
    sa.Column('last_sync_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('health_status', sa.String(length=50), nullable=True),
    sa.Column('last_health_check', sa.DateTime(), nullable=True),
    sa.Column('connection_retries', sa.Integer(), nullable=True),
    sa.Column('total_requests', sa.Integer(), nullable=True),
    sa.Column('successful_requests', sa.Integer(), nullable=True),
    sa.Column('average_response_time', sa.Float(), nullable=True),
    sa.Column('timeout_seconds', sa.Integer(), nullable=True),
    sa.Column('max_retries', sa.Integer(), nullable=True),
    sa.Column('enable_auto_sync', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mcp_servers_tenant_id'), 'mcp_servers', ['tenant_id'], unique=False)
    op.create_table('documents',
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('team_id', sa.UUID(), nullable=True),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('slug', sa.String(length=500), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('document_type', sa.String(length=50), nullable=False),
    sa.Column('template_id', sa.UUID(), nullable=True),
    sa.Column('content_type', sa.String(length=50), nullable=False),
    sa.Column('word_count', sa.Integer(), nullable=True),
    sa.Column('character_count', sa.Integer(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('last_edited_by', sa.UUID(), nullable=True),
    sa.Column('last_edited_at', sa.DateTime(), nullable=True),
    sa.Column('is_collaborative', sa.Boolean(), nullable=True),
    sa.Column('max_collaborators', sa.Integer(), nullable=True),
    sa.Column('current_collaborators', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('is_template', sa.Boolean(), nullable=True),
    sa.Column('ai_assistance_enabled', sa.Boolean(), nullable=True),
    sa.Column('ai_suggestions', sa.JSON(), nullable=True),
    sa.Column('auto_save_enabled', sa.Boolean(), nullable=True),
    sa.Column('source_type', sa.String(length=50), nullable=True),
    sa.Column('source_url', sa.Text(), nullable=True),
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['last_edited_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['documents.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documents_tenant_id'), 'documents', ['tenant_id'], unique=False)
    op.create_table('knowledge_bases',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('display_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('vector_store_type', sa.String(length=50), nullable=False),
    sa.Column('collection_name', sa.String(length=255), nullable=False),
    sa.Column('embedding_model', sa.String(length=100), nullable=False),
    sa.Column('embedding_dimension', sa.Integer(), nullable=False),
    sa.Column('graph_name', sa.String(length=255), nullable=True),
    sa.Column('enable_graph_queries', sa.Boolean(), nullable=True),
    sa.Column('chunk_size', sa.Integer(), nullable=True),
    sa.Column('chunk_overlap', sa.Integer(), nullable=True),
    sa.Column('auto_processing', sa.Boolean(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('team_id', sa.UUID(), nullable=True),
    sa.Column('document_count', sa.Integer(), nullable=True),
    sa.Column('vector_count', sa.Integer(), nullable=True),
    sa.Column('entity_count', sa.Integer(), nullable=True),
    sa.Column('relation_count', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_indexed_at', sa.DateTime(), nullable=True),
    sa.Column('indexing_status', sa.String(length=50), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_knowledge_bases_tenant_id'), 'knowledge_bases', ['tenant_id'], unique=False)
    op.create_table('tools',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('display_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('tool_type', sa.String(length=50), nullable=False),
    sa.Column('version', sa.String(length=50), nullable=False),
    sa.Column('is_system_tool', sa.Boolean(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('requires_approval', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('team_id', sa.UUID(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('verification_status', sa.String(length=50), nullable=True),
    sa.Column('total_executions', sa.Integer(), nullable=True),
    sa.Column('successful_executions', sa.Integer(), nullable=True),
    sa.Column('average_execution_time', sa.Float(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tools_tenant_id'), 'tools', ['tenant_id'], unique=False)
    op.create_table('document_content',
    sa.Column('document_id', sa.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('is_current', sa.Boolean(), nullable=True),
    sa.Column('content', sa.JSON(), nullable=False),
    sa.Column('plain_text', sa.Text(), nullable=True),
    sa.Column('html_content', sa.Text(), nullable=True),
    sa.Column('word_count', sa.Integer(), nullable=True),
    sa.Column('character_count', sa.Integer(), nullable=True),
    sa.Column('reading_time', sa.Integer(), nullable=True),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('change_description', sa.Text(), nullable=True),
    sa.Column('yjs_state', sa.JSON(), nullable=True),
    sa.Column('conflict_resolution', sa.JSON(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('document_permissions',
    sa.Column('document_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('team_id', sa.UUID(), nullable=True),
    sa.Column('permission_type', sa.String(length=50), nullable=False),
    sa.Column('can_read', sa.Boolean(), nullable=True),
    sa.Column('can_write', sa.Boolean(), nullable=True),
    sa.Column('can_admin', sa.Boolean(), nullable=True),
    sa.Column('can_comment', sa.Boolean(), nullable=True),
    sa.Column('can_share', sa.Boolean(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('granted_by', sa.UUID(), nullable=False),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['granted_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('document_shares',
    sa.Column('document_id', sa.UUID(), nullable=False),
    sa.Column('share_token', sa.String(length=255), nullable=False),
    sa.Column('share_type', sa.String(length=50), nullable=False),
    sa.Column('access_level', sa.String(length=50), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('allowed_emails', sa.JSON(), nullable=True),
    sa.Column('allowed_domains', sa.JSON(), nullable=True),
    sa.Column('max_views', sa.Integer(), nullable=True),
    sa.Column('current_views', sa.Integer(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_accessed_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('share_token')
    )
    op.create_table('document_vectors',
    sa.Column('knowledge_base_id', sa.UUID(), nullable=False),
    sa.Column('document_id', sa.UUID(), nullable=True),
    sa.Column('vector_id', sa.String(length=255), nullable=False),
    sa.Column('collection_name', sa.String(length=255), nullable=False),
    sa.Column('chunk_index', sa.Integer(), nullable=True),
    sa.Column('content_type', sa.String(length=50), nullable=False),
    sa.Column('content_hash', sa.String(length=64), nullable=True),
    sa.Column('token_count', sa.Integer(), nullable=True),
    sa.Column('embedding_model', sa.String(length=100), nullable=False),
    sa.Column('embedding_dimension', sa.Integer(), nullable=False),
    sa.Column('embedding_created_at', sa.DateTime(), nullable=False),
    sa.Column('chunk_text', sa.Text(), nullable=True),
    sa.Column('chunk_start', sa.Integer(), nullable=True),
    sa.Column('chunk_end', sa.Integer(), nullable=True),
    sa.Column('processing_status', sa.String(length=50), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['knowledge_base_id'], ['knowledge_bases.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('knowledge_entities',
    sa.Column('knowledge_base_id', sa.UUID(), nullable=False),
    sa.Column('entity_id', sa.String(length=255), nullable=False),
    sa.Column('entity_type', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=False),
    sa.Column('canonical_name', sa.String(length=500), nullable=True),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.Column('aliases', sa.JSON(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('source_documents', sa.JSON(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('extraction_method', sa.String(length=50), nullable=True),
    sa.Column('age_node_id', sa.String(length=255), nullable=True),
    sa.Column('age_label', sa.String(length=100), nullable=True),
    sa.Column('has_embedding', sa.Boolean(), nullable=True),
    sa.Column('embedding_model', sa.String(length=100), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['knowledge_base_id'], ['knowledge_bases.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tool_definitions',
    sa.Column('tool_id', sa.UUID(), nullable=False),
    sa.Column('definition_version', sa.String(length=50), nullable=False),
    sa.Column('is_current', sa.Boolean(), nullable=True),
    sa.Column('schema_version', sa.String(length=20), nullable=False),
    sa.Column('input_schema', sa.JSON(), nullable=False),
    sa.Column('output_schema', sa.JSON(), nullable=True),
    sa.Column('execution_config', sa.JSON(), nullable=True),
    sa.Column('timeout_seconds', sa.Integer(), nullable=True),
    sa.Column('max_retries', sa.Integer(), nullable=True),
    sa.Column('requires_confirmation', sa.Boolean(), nullable=True),
    sa.Column('mcp_server_id', sa.UUID(), nullable=True),
    sa.Column('mcp_tool_name', sa.String(length=255), nullable=True),
    sa.Column('api_endpoint', sa.Text(), nullable=True),
    sa.Column('api_method', sa.String(length=10), nullable=True),
    sa.Column('api_headers', sa.JSON(), nullable=True),
    sa.Column('api_auth_type', sa.String(length=50), nullable=True),
    sa.Column('execution_code', sa.Text(), nullable=True),
    sa.Column('execution_environment', sa.String(length=50), nullable=True),
    sa.Column('sandbox_enabled', sa.Boolean(), nullable=True),
    sa.Column('allowed_domains', sa.JSON(), nullable=True),
    sa.Column('security_level', sa.String(length=50), nullable=True),
    sa.Column('is_valid', sa.Boolean(), nullable=True),
    sa.Column('validation_errors', sa.JSON(), nullable=True),
    sa.Column('last_validated_at', sa.DateTime(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['mcp_server_id'], ['mcp_servers.id'], ),
    sa.ForeignKeyConstraint(['tool_id'], ['tools.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('knowledge_relations',
    sa.Column('knowledge_base_id', sa.UUID(), nullable=False),
    sa.Column('relation_id', sa.String(length=255), nullable=False),
    sa.Column('relation_type', sa.String(length=100), nullable=False),
    sa.Column('source_entity_id', sa.UUID(), nullable=False),
    sa.Column('target_entity_id', sa.UUID(), nullable=False),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('source_documents', sa.JSON(), nullable=True),
    sa.Column('extraction_method', sa.String(length=50), nullable=True),
    sa.Column('age_edge_id', sa.String(length=255), nullable=True),
    sa.Column('age_label', sa.String(length=100), nullable=True),
    sa.Column('valid_from', sa.DateTime(), nullable=True),
    sa.Column('valid_to', sa.DateTime(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['knowledge_base_id'], ['knowledge_bases.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_entity_id'], ['knowledge_entities.id'], ),
    sa.ForeignKeyConstraint(['target_entity_id'], ['knowledge_entities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tool_executions',
    sa.Column('tool_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('conversation_id', sa.UUID(), nullable=True),
    sa.Column('message_id', sa.UUID(), nullable=True),
    sa.Column('execution_id', sa.String(length=255), nullable=False),
    sa.Column('tool_version', sa.String(length=50), nullable=True),
    sa.Column('input_data', sa.JSON(), nullable=False),
    sa.Column('output_data', sa.JSON(), nullable=True),
    sa.Column('error_data', sa.JSON(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('duration_ms', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('exit_code', sa.Integer(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('execution_context', sa.JSON(), nullable=True),
    sa.Column('user_agent', sa.String(length=255), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('was_sandboxed', sa.Boolean(), nullable=True),
    sa.Column('security_violations', sa.JSON(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.ForeignKeyConstraint(['message_id'], ['messages.id'], ),
    sa.ForeignKeyConstraint(['tool_id'], ['tools.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('execution_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tool_executions')
    op.drop_table('knowledge_relations')
    op.drop_table('tool_definitions')
    op.drop_table('knowledge_entities')
    op.drop_table('document_vectors')
    op.drop_table('document_shares')
    op.drop_table('document_permissions')
    op.drop_table('document_content')
    op.drop_index(op.f('ix_tools_tenant_id'), table_name='tools')
    op.drop_table('tools')
    op.drop_index(op.f('ix_knowledge_bases_tenant_id'), table_name='knowledge_bases')
    op.drop_table('knowledge_bases')
    op.drop_index(op.f('ix_documents_tenant_id'), table_name='documents')
    op.drop_table('documents')
    op.drop_index(op.f('ix_mcp_servers_tenant_id'), table_name='mcp_servers')
    op.drop_table('mcp_servers')
    # ### end Alembic commands ###