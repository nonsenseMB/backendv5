"""Initial migration

Revision ID: 9c9483fa7130
Revises: 
Create Date: 2025-06-23 16:46:59.570376

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9c9483fa7130'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tenants',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('slug', sa.String(length=255), nullable=False),
    sa.Column('domain', sa.String(length=255), nullable=True),
    sa.Column('industry', sa.String(length=100), nullable=True),
    sa.Column('company_size', sa.String(length=50), nullable=True),
    sa.Column('country', sa.String(length=2), nullable=True),
    sa.Column('plan_type', sa.String(length=50), nullable=True),
    sa.Column('trial_ends_at', sa.DateTime(), nullable=True),
    sa.Column('subscription_ends_at', sa.DateTime(), nullable=True),
    sa.Column('max_users', sa.Integer(), nullable=True),
    sa.Column('max_teams', sa.Integer(), nullable=True),
    sa.Column('max_agents', sa.Integer(), nullable=True),
    sa.Column('max_monthly_tokens', sa.Integer(), nullable=True),
    sa.Column('max_storage_gb', sa.Integer(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('features', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('activation_date', sa.DateTime(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('users',
    sa.Column('external_id', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=True),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('avatar_url', sa.Text(), nullable=True),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('last_seen_at', sa.DateTime(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('external_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('llm_providers',
    sa.Column('provider_type', sa.String(length=50), nullable=False),
    sa.Column('display_name', sa.String(length=255), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('base_url', sa.Text(), nullable=True),
    sa.Column('api_version', sa.String(length=50), nullable=True),
    sa.Column('region', sa.String(length=50), nullable=True),
    sa.Column('available_models', sa.JSON(), nullable=True),
    sa.Column('default_model', sa.String(length=100), nullable=True),
    sa.Column('rate_limit_rpm', sa.Integer(), nullable=True),
    sa.Column('rate_limit_tpd', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_health_check', sa.DateTime(), nullable=True),
    sa.Column('health_status', sa.String(length=50), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_llm_providers_tenant_id'), 'llm_providers', ['tenant_id'], unique=False)
    op.create_table('long_term_memory',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('memory_type', sa.String(length=50), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('source_type', sa.String(length=50), nullable=True),
    sa.Column('source_id', sa.UUID(), nullable=True),
    sa.Column('conversation_ids', postgresql.ARRAY(sa.UUID()), nullable=True),
    sa.Column('importance', sa.Float(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('reinforcement_count', sa.Integer(), nullable=True),
    sa.Column('embedding_id', sa.String(length=255), nullable=True),
    sa.Column('access_count', sa.Integer(), nullable=True),
    sa.Column('last_accessed_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_long_term_memory_tenant_id'), 'long_term_memory', ['tenant_id'], unique=False)
    op.create_table('memory_shares',
    sa.Column('memory_type', sa.String(length=50), nullable=False),
    sa.Column('memory_id', sa.UUID(), nullable=False),
    sa.Column('shared_with_type', sa.String(length=50), nullable=False),
    sa.Column('shared_with_id', sa.UUID(), nullable=False),
    sa.Column('can_read', sa.Boolean(), nullable=True),
    sa.Column('can_modify', sa.Boolean(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('shared_by', sa.UUID(), nullable=False),
    sa.Column('share_reason', sa.Text(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['shared_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_memory_shares_tenant_id'), 'memory_shares', ['tenant_id'], unique=False)
    op.create_table('tenant_users',
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('permissions', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('joined_at', sa.DateTime(), nullable=False),
    sa.Column('invited_by', sa.UUID(), nullable=True),
    sa.Column('invitation_accepted_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['invited_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tenant_id', 'user_id', name='idx_tenant_users_unique')
    )
    op.create_index('idx_tenant_users_tenant_id', 'tenant_users', ['tenant_id'], unique=False)
    op.create_index('idx_tenant_users_user_id', 'tenant_users', ['user_id'], unique=False)
    op.create_table('user_devices',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('device_name', sa.String(length=255), nullable=False),
    sa.Column('device_type', sa.String(length=50), nullable=False),
    sa.Column('device_id', sa.String(length=255), nullable=False),
    sa.Column('credential_id', sa.String(length=255), nullable=True),
    sa.Column('public_key', sa.Text(), nullable=True),
    sa.Column('attestation_object', sa.JSON(), nullable=True),
    sa.Column('is_trusted', sa.Boolean(), nullable=True),
    sa.Column('trust_score', sa.Float(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('use_count', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('credential_id'),
    sa.UniqueConstraint('device_id')
    )
    op.create_table('user_preferences',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('preferred_name', sa.String(length=255), nullable=True),
    sa.Column('communication_style', sa.String(length=50), nullable=True),
    sa.Column('response_length', sa.String(length=50), nullable=True),
    sa.Column('preferred_languages', sa.JSON(), nullable=True),
    sa.Column('expertise_areas', sa.JSON(), nullable=True),
    sa.Column('avoided_topics', sa.JSON(), nullable=True),
    sa.Column('learning_style', sa.String(length=50), nullable=True),
    sa.Column('decision_style', sa.String(length=50), nullable=True),
    sa.Column('theme', sa.String(length=50), nullable=True),
    sa.Column('notification_preferences', sa.JSON(), nullable=True),
    sa.Column('preferred_agent_ids', postgresql.ARRAY(sa.UUID()), nullable=True),
    sa.Column('agent_interaction_style', sa.JSON(), nullable=True),
    sa.Column('memory_retention_days', sa.Integer(), nullable=True),
    sa.Column('allow_memory_sharing', sa.Boolean(), nullable=True),
    sa.Column('custom_preferences', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('agents',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('display_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('avatar_url', sa.Text(), nullable=True),
    sa.Column('agent_type', sa.String(length=50), nullable=False),
    sa.Column('specialization', sa.String(length=100), nullable=True),
    sa.Column('graph_definition', sa.JSON(), nullable=True),
    sa.Column('default_llm_provider_id', sa.UUID(), nullable=True),
    sa.Column('model_preferences', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['default_llm_provider_id'], ['llm_providers.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agents_tenant_id'), 'agents', ['tenant_id'], unique=False)
    op.create_table('llm_api_keys',
    sa.Column('provider_id', sa.UUID(), nullable=False),
    sa.Column('key_name', sa.String(length=255), nullable=False),
    sa.Column('encrypted_key', sa.Text(), nullable=False),
    sa.Column('key_hint', sa.String(length=20), nullable=True),
    sa.Column('encryption_key_id', sa.String(length=100), nullable=True),
    sa.Column('total_requests', sa.Integer(), nullable=True),
    sa.Column('total_tokens', sa.Integer(), nullable=True),
    sa.Column('total_cost', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('rotated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['provider_id'], ['llm_providers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teams',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('slug', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('avatar_url', sa.Text(), nullable=True),
    sa.Column('team_agent_id', sa.UUID(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('ws_channel_id', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('member_count', sa.Integer(), nullable=True),
    sa.Column('active_conversations', sa.Integer(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['team_agent_id'], ['agents.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ws_channel_id')
    )
    op.create_index(op.f('ix_teams_tenant_id'), 'teams', ['tenant_id'], unique=False)
    op.create_table('conversations',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('team_id', sa.UUID(), nullable=True),
    sa.Column('title', sa.String(length=500), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('agent_id', sa.UUID(), nullable=True),
    sa.Column('llm_provider_id', sa.UUID(), nullable=True),
    sa.Column('model_settings', sa.JSON(), nullable=True),
    sa.Column('message_count', sa.Integer(), nullable=True),
    sa.Column('checkpoint_frequency', sa.Integer(), nullable=True),
    sa.Column('last_checkpoint_at', sa.DateTime(), nullable=True),
    sa.Column('ws_channel_id', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('last_message_at', sa.DateTime(), nullable=True),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ),
    sa.ForeignKeyConstraint(['llm_provider_id'], ['llm_providers.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversations_tenant_id'), 'conversations', ['tenant_id'], unique=False)
    op.create_table('team_members',
    sa.Column('team_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('permissions', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('joined_at', sa.DateTime(), nullable=False),
    sa.Column('invited_by', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['invited_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('conversation_checkpoints',
    sa.Column('conversation_id', sa.UUID(), nullable=False),
    sa.Column('checkpoint_number', sa.Integer(), nullable=False),
    sa.Column('message_count', sa.Integer(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=False),
    sa.Column('key_points', sa.JSON(), nullable=True),
    sa.Column('entities_mentioned', sa.JSON(), nullable=True),
    sa.Column('original_tokens', sa.Integer(), nullable=True),
    sa.Column('summary_tokens', sa.Integer(), nullable=True),
    sa.Column('compression_ratio', sa.Float(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('messages',
    sa.Column('conversation_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('model_used', sa.String(length=100), nullable=True),
    sa.Column('provider_id', sa.UUID(), nullable=True),
    sa.Column('prompt_tokens', sa.Integer(), nullable=True),
    sa.Column('completion_tokens', sa.Integer(), nullable=True),
    sa.Column('total_tokens', sa.Integer(), nullable=True),
    sa.Column('tool_calls', sa.JSON(), nullable=True),
    sa.Column('tool_results', sa.JSON(), nullable=True),
    sa.Column('parent_message_id', sa.UUID(), nullable=True),
    sa.Column('ws_delivered', sa.Boolean(), nullable=True),
    sa.Column('ws_delivered_at', sa.DateTime(), nullable=True),
    sa.Column('is_visible', sa.Boolean(), nullable=True),
    sa.Column('is_edited', sa.Boolean(), nullable=True),
    sa.Column('error', sa.JSON(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('edited_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['parent_message_id'], ['messages.id'], ),
    sa.ForeignKeyConstraint(['provider_id'], ['llm_providers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('short_term_memory',
    sa.Column('conversation_id', sa.UUID(), nullable=False),
    sa.Column('memory_type', sa.String(length=50), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('importance', sa.Float(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('accessed_count', sa.Integer(), nullable=True),
    sa.Column('last_accessed_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('source', sa.String(length=50), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('short_term_memory')
    op.drop_table('messages')
    op.drop_table('conversation_checkpoints')
    op.drop_table('team_members')
    op.drop_index(op.f('ix_conversations_tenant_id'), table_name='conversations')
    op.drop_table('conversations')
    op.drop_index(op.f('ix_teams_tenant_id'), table_name='teams')
    op.drop_table('teams')
    op.drop_table('llm_api_keys')
    op.drop_index(op.f('ix_agents_tenant_id'), table_name='agents')
    op.drop_table('agents')
    op.drop_table('user_preferences')
    op.drop_table('user_devices')
    op.drop_index('idx_tenant_users_user_id', table_name='tenant_users')
    op.drop_index('idx_tenant_users_tenant_id', table_name='tenant_users')
    op.drop_table('tenant_users')
    op.drop_index(op.f('ix_memory_shares_tenant_id'), table_name='memory_shares')
    op.drop_table('memory_shares')
    op.drop_index(op.f('ix_long_term_memory_tenant_id'), table_name='long_term_memory')
    op.drop_table('long_term_memory')
    op.drop_index(op.f('ix_llm_providers_tenant_id'), table_name='llm_providers')
    op.drop_table('llm_providers')
    op.drop_table('users')
    op.drop_table('tenants')
    # ### end Alembic commands ###