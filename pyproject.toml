[tool.poetry]
name = "backendv5"
version = "0.1.0"
description = "Backend v5 - FastAPI-based application"
authors = ["Mike Berndt <berndt.mike@gmail.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.115.0"
uvicorn = {extras = ["standard"], version = "^0.32.0"}
pydantic = "^2.10.0"
pydantic-settings = "^2.5.0"
sqlalchemy = "^2.0.36"
alembic = "^1.14.0"
asyncpg = "^0.30.0"
redis = "^5.1.0"
httpx = "^0.27.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.12"
email-validator = "^2.2.0"
structlog = "^24.4.0"
opentelemetry-api = "^1.27.0"
opentelemetry-sdk = "^1.27.0"
opentelemetry-instrumentation-fastapi = "^0.48b0"
opentelemetry-instrumentation-sqlalchemy = "^0.48b0"
rich = "^14.0.0"
psycopg2-binary = "^2.9.10"
greenlet = "^3.2.3"
python-dotenv = "^1.1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.0"
pytest-asyncio = "^0.24.0"
pytest-cov = "^5.0.0"
pytest-benchmark = "^4.0.0"
psutil = "^6.0.0"
mypy = "^1.13.0"
ruff = "^0.7.0"
black = "^24.10.0"
isort = "^5.13.0"
pre-commit = "^3.8.0"
ipython = "^8.29.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120
target-version = "py311"
exclude = ["migrations", "alembic", ".venv", "env", "build", "dist"]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "B024",  # abstract base class without abstract methods
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
strict_optional = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --disable-warnings"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/migrations/*", "*/alembic/*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.isort]
profile = "black"
line_length = 120
skip_gitignore = true
known_first_party = ["src"]